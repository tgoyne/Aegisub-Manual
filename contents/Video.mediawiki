Aegisub isn't a video (or media) player, but it still supports loading and working with video in various ways.

==Opening video==
To load a video file, go to the ''Video'' menu and press ''Open video file''. What video files you can open depends on your [[Options#Video|video provider]]. To use a dummy (mockup, blank) video, press ''Use dummy video''.

===Supported formats: Windows===
On Windows, your video provider is ''Avisynth'' by default, which in practice means Aegisub will try its best to load your video in the most reliable way possible. There are currently no less than six Avisynth functions it can try:
* '''Import()''' - Avisynth builtin function. Used to load Avisynth scripts, never used for anything else.
* '''AviSource()''' - Avisynth builtin function. Only works on AVI files, obviously. Requires a working Video for Windows (VfW) decoder to open the video. Tried first for .avi files, never for anything else. If it fails, Aegisub will try ffmpegSource() instead, if that fails try DSS2(), and if that too fails try DirectShowSource() (see below).
* '''MPEG2Source()''' - Only used to load .d2v files (DVD2AVI project files; otherwise known as indexed .VOB's ripped from DVD's). Tries to use neuron2's [http://neuron2.net/dgmpgdec/dgmpgdec.html DGDecode] to open the file; if Aegisub can't find or load that it'll try the old mpeg2dec3.dll instead; if that too fails, returns an error. 
* '''ffmpegSource()''' - Tries to use Myrsloik's [http://forum.doom9.org/showthread.php?t=127037 ffmpegsource plugin] (comes with the default Aegisub install) to try to load the file; see its manual for information on what formats and codecs are supported and what problems they may suffer from. Tried first for anything that isn't .avs, .avi or .d2v. If Aegisub can't find it or it returns an error, falls back on DSS2() or if that isn't available, DirectShowSource().
* '''DSS2()''' - Tries to find, load and use Haali's DirectShowSource2 plugin (comes with the [http://haali.cs.msu.ru/mkv/ Haali Media Splitter] package and with the [http://cccp-project.net CCCP]; the Avisynth plugin is ''avss.dll'', you need to manually put it somewhere where Aegisub or Avisynth can find it, see below). That will in turn try to use your computer's DirectShow environment to open the file. Theoretically any file renderable by DirectShow should be supported, but since you are at the mercy of third-party splitters and decoders, your mileage may vary. As a rule of thumb, if it's playable in Windows Media Player, Aegisub should be able to load it. Do note that DSS2 converts variable framerate files to constant. Usually this is what you want and expect but if you're doing proper VFR subtitles, it isn't.
* '''DirectShowSource()''' - Uses DirectShowSource() (which ships with Avisynth) to try to load the file. Basically the same as DSS2, with the exception that it doesn't convert VFR to CFR. '''Warning:''' DSS is known to have problems with frame-accurate seeking. Do not use it if you can avoid it.

Aegisub will look for Avisynth plugins in its [[Aegisub path specifiers#?data|?data]] directory (generally the folder where Aegisub.exe is, on Windows). You can also put them directly in your Avisynth plugins folder to get them autoloaded.

Anyway, what does all this mean to you as the average user? It means Aegisub can in theory open ANY video format as long as you are capable of playing it in Windows Media Player (or render it in GraphEdit), plus some that aren't playable there (such as .d2v's). At least it'll try its best to load it. You may however run into trouble with some of the more unusual formats and just because you CAN load something it doesn't mean it's a good idea to use it. Formats more or less guaranteed to work in a stable fashion with the default install include but is not limited to:
* XviD/DivX/other MPEG4 ASP codecs in AVI
* Most stuff stored in Matroska (except maybe some really oddball ''V_MS/VFW/FOURCC'' streams)
* Pretty much any standards-compliant MP4

If you change the video provider to ''dshow'', Aegisub will try to interface directly with DirectShow to open the file. May help with some really oddball files, but is usually not recommended.

===Supported formats: Unix===
Under Unix or Unix-like systems (including but not limited to *BSD, GNU/Linux, and MacOS X) your video provider is ''ffmpeg'', which means Aegisub will attempt to load the video using, well, ffmpeg, which should mean that anything supported by ffmpeg is supported; see its documentation for details. There are a few quirks however; for example libavformat is not used for Matroska (.mkv .mka .mks etc) files since its Matroska splitter has a lot of issues; instead Aegisub does its own parsing of such files (by using code borrowed from Haali's Matroska parser).

At the time of writing the ffmpeg interface isn't 100% stable (much like Aegisub in its entirety isn't 100% stable under Unix yet) but at least most AVI's, MKV's and MP4's seem to work in a decently reliable fashion.

===Dummy video===
Aegisub also supports providing a bogus video surface for you to render subtitles on without having any actual video loaded. The dummy video dialog box looks like this:
{{Todo|screenshot}}
* '''Resolution'''
: The resolution of the dummy video in pixels. There are a few pre-defined choices in the dropdown menu; you can also specify the size yourself. Note that since the dummy video is RGB there are no particular restrictions with regards to odd widths/heights.
* '''Colour'''
: The colour of the video surface. The color is solid by default; tick the box "checkerboard pattern" if you want some more variation.
* '''Frame rate'''
: Determines how long each frame is displayed by setting the number of frames per second (fps). Note that it is in fact possible to load VFR timecodes with dummy video.
* '''Duration'''
: The duration of the video in frames. Below this number is shown the resulting duration in hours/minutes/seconds.

==Variable framerate video==
Aegisub supports loading and working with variable framerate video. The how's and why's of VFR is far outside the scope of this manual (see for example [http://forums.animesuki.com/showthread.php?t=34738 the VFR thread on AnimeSuki] or the [http://avisynth.org/mediawiki/VFR Avisynth manual page] for more information about VFR), but we will cover what you need to know about how Aegisub handles it.

===Timecodes===
Loading of Matroska timecode files (v1 and v2) is supported and useful if you have a VFRaC (Variable FrameRate assumed Constant; for example the frames of an VFR MKV stored in an AVI at a constant FPS, see the VFR thread linked above for details) video file but want the subs to sync to it. If you load a Matroska file, Aegisub will automatically read the timecodes from it directly. Do however note that this is '''NOT''' supported for any other potentially VFR formats like MP4 or WMV; for those formats you '''MUST''' demux and load timecodes yourself or the audio/video/subtitle synchronization will be wrong. Be aware that WMV in particular is frequently VFR even if you do not expect it.

===VFR and hardsubbing===
As long as you're not encoding with GDSMux, the encoding environment your subtitling filter is working in (i.e. Avisynth, VirtualDub or mencoder) will assume that the world is CFR, and hence the input file is VFRaC. This is obviously a problem since it messes up subtitle synchronization. Aegisub provides a way around this through the Framerate Transformation export filter, which takes the framerate of the VFRaC input file and the timecodes, and then changes every time code and override tag in the script so it can be hardsubbed on the VFRaC video and still sync up perfectly after timecodes are applied.

==The Video menu==
The following options are available from the video menu:

===Sourcefile-related===
* '''Open video'''
: Opens video. Note that if you try to open another video with video already loaded, the original video will be closed first.
* '''Close video'''
: Unloads the currently open video.
* '''Recent'''
: Shows list of recently opened videos.
* '''Use dummy video'''
: Opens a dummy video (see above).
* '''Show video details'''
: Shows some information about the currently open video. Details shown are filename, frames per second (for VFR files the average FPS is displayed), resolution and aspect ratio, length and decoder. Decoder being what filter/method Aegisub used to open the file.

===Timecodes-related===